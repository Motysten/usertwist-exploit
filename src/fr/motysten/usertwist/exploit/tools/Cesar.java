package fr.motysten.usertwist.exploit.tools;

import java.util.stream.Collectors;

public class Cesar {

    public static String rotate(String input, int offset) {
        char normalizeKey = (char) (offset % 26);

        return input.chars()
                .mapToObj(c -> (char) c)
                .map(c -> {
                    if (Character.isLetter(c)) {
                        char base;
                        if (Character.isUpperCase(c)) {
                            base = 'A';
                        } else {
                            base = 'a';
                        }
                        if (offset < 0) {
                            return (char) (base + (c - base + normalizeKey) % 26);
                        } else {
                            return (char) (base + (c - base - normalizeKey + 26) % 26);
                        }
                    } else {
                        return c;
                    }
                })
                .map(String::valueOf)
                .collect(Collectors.joining());
    }

}
